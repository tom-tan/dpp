name: CI
on: [push, pull_request]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    name: Dub Test
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15]
        dc:
          # - dmd-2.099.0
          - ldc-1.28.1
        arch:
          - x86_64
        clang:
          - 12.0.0
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3
          bundler-cache: true
      # Ruby puts this on the path which breaks ldc
      - name: Rename msys64/link.exe
        if: startsWith(matrix.os,'windows')
        shell: pwsh
        run: mv C:\msys64\usr\bin\link.exe C:\msys64\usr\bin\msys-link.exe

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/llvm
          key: cache-os:${{ matrix.os }}-clang:${{ matrix.clang }}

      - name: Setup D
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Setup C++
        uses: aminya/setup-cpp@v1
        with:
          llvm: ${{ matrix.clang }}

      - name: Run tests
        run: |
          dub run -q -- --ignore-system-paths --preprocess-only issue.dpp

          which clang-cpp 2> /dev/null
          ret=$?
          echo "clang-cpp?: $ret"
          echo "===== cpp info:" >&2
          cpp --version >&2
          echo "===== start process ddecl /w env =====" >&2
          cpp -w --comments ddecl.d >&2
          echo "===== start process ddecl /wo env =====" >&2
          env -i sh -c 'cpp -w --comments ddecl.d' >&2
          echo "===== end process ddecl =====" >&2

          echo "===== preprocessed =====" >&2
          cat issue.d >&2
          echo "===== preprocessed =====" >&2
          ldc2 -c issue.d
        env:
          LIBRARY_PATH: "${{ env.LLVM_PATH }}/lib"

  test-with-default-env:
    name: Dub Test on macOS
    strategy:
      matrix:
        os: [macos-10.15]
        dc:
          # - dmd-2.099.0
          - ldc-1.28.1
        arch:
          - x86_64
        # clang:
        #   - 12.0.0
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3
          bundler-cache: true

      - name: Setup D
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}

      - name: Setup
        run: |
          brew uninstall llvm
          sudo ln -s /Library/Developer/CommandLineTools/usr/lib/libclang.dylib /usr/local/lib/libclang.dylib

      - name: Run tests
        run: |
          dub run -q -- --ignore-system-paths --preprocess-only issue.dpp

          which clang-cpp 2> /dev/null
          ret=$?
          echo "clang-cpp?: $ret"
          echo "===== cpp info:" >&2
          cpp --version >&2
          echo "===== start process ddecl /w env =====" >&2
          cpp -w --comments ddecl.d >&2
          echo "===== start process ddecl /wo env =====" >&2
          env -i sh -c 'cpp -w --comments ddecl.d' >&2
          echo "===== end process ddecl =====" >&2

          echo "===== preprocessed =====" >&2
          cat issue.d >&2
          echo "===== preprocessed =====" >&2
          ldc2 -c issue.d
        # env:
        #   LIBRARY_PATH: "${{ env.LLVM_PATH }}/lib"
